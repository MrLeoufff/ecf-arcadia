<?php

namespace ContainerFQiKvhx;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getDoctrineMongodb_Odm_DefaultDocumentManagerService extends App_KernelProdContainer
{
    /*
     * Gets the public 'doctrine_mongodb.odm.default_document_manager' shared service.
     *
     * @return \Doctrine\ODM\MongoDB\DocumentManager
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = new \Doctrine\ODM\MongoDB\Configuration();

        $b = new \Doctrine\Persistence\Mapping\Driver\MappingDriverChain();
        $b->addDriver(new \Doctrine\ODM\MongoDB\Mapping\Driver\AttributeDriver([(\dirname(__DIR__, 4).'/src/Document')]), 'App\\Document');

        $a->setDocumentNamespaces(['App' => 'App\\Document']);
        $a->setMetadataCache(($container->privates['doctrine_mongodb.system_cache_pool'] ?? $container->load('getDoctrineMongodb_SystemCachePoolService')));
        $a->setMetadataDriverImpl($b);
        $a->setProxyDir(($container->targetDir.''.'/doctrine/odm/mongodb/Proxies'));
        $a->setProxyNamespace('MongoDBODMProxies');
        $a->setAutoGenerateProxyClasses(3);
        $a->setHydratorDir(($container->targetDir.''.'/doctrine/odm/mongodb/Hydrators'));
        $a->setHydratorNamespace('Hydrators');
        $a->setAutoGenerateHydratorClasses(0);
        $a->setDefaultDB($container->getEnv('resolve:MONGODB_DB'));
        $a->setDefaultCommitOptions([]);
        $a->setDefaultDocumentRepositoryClassName('Doctrine\\ODM\\MongoDB\\Repository\\DocumentRepository');
        $a->setDefaultGridFSRepositoryClassName('Doctrine\\ODM\\MongoDB\\Repository\\DefaultGridFSRepository');
        $a->setPersistentCollectionDir(($container->targetDir.''.'/doctrine/odm/mongodb/PersistentCollections'));
        $a->setPersistentCollectionNamespace('PersistentCollections');
        $a->setAutoGeneratePersistentCollectionClasses(0);
        $a->setRepositoryFactory(new \Doctrine\Bundle\MongoDBBundle\Repository\ContainerRepositoryFactory(($container->privates['.service_locator.GIuJv7e'] ??= new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [], []))));

        $container->services['doctrine_mongodb.odm.default_document_manager'] = $instance = \Doctrine\ODM\MongoDB\DocumentManager::create(($container->services['doctrine_mongodb.odm.default_connection'] ?? $container->load('getDoctrineMongodb_Odm_DefaultConnectionService')), $a, new \Symfony\Bridge\Doctrine\ContainerAwareEventManager($container));

        (new \Doctrine\Bundle\MongoDBBundle\ManagerConfigurator([]))->configure($instance);

        return $instance;
    }
}
