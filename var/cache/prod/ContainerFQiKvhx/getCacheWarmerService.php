<?php

namespace ContainerFQiKvhx;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getCacheWarmerService extends App_KernelProdContainer
{
    /*
     * Gets the public 'cache_warmer' shared service.
     *
     * @return \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->services['cache_warmer'] = new \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['doctrine.orm.default_metadata_cache_warmer'] ?? $container->load('getDoctrine_Orm_DefaultMetadataCacheWarmerService'));
            yield 1 => ($container->privates['doctrine_mongodb.odm.proxy_cache_warmer'] ??= new \Doctrine\Bundle\MongoDBBundle\CacheWarmer\ProxyCacheWarmer($container));
            yield 2 => ($container->privates['doctrine_mongodb.odm.hydrator_cache_warmer'] ??= new \Doctrine\Bundle\MongoDBBundle\CacheWarmer\HydratorCacheWarmer($container));
            yield 3 => ($container->privates['doctrine_mongodb.odm.persistent_collection_cache_warmer'] ??= new \Doctrine\Bundle\MongoDBBundle\CacheWarmer\PersistentCollectionCacheWarmer($container));
            yield 4 => ($container->privates['config_builder.warmer'] ?? $container->load('getConfigBuilder_WarmerService'));
            yield 5 => ($container->privates['translation.warmer'] ?? $container->load('getTranslation_WarmerService'));
            yield 6 => ($container->privates['router.cache_warmer'] ?? $container->load('getRouter_CacheWarmerService'));
            yield 7 => ($container->privates['serializer.mapping.cache_warmer'] ?? $container->load('getSerializer_Mapping_CacheWarmerService'));
            yield 8 => ($container->privates['validator.mapping.cache_warmer'] ?? $container->load('getValidator_Mapping_CacheWarmerService'));
            yield 9 => ($container->privates['doctrine.orm.proxy_cache_warmer'] ?? $container->load('getDoctrine_Orm_ProxyCacheWarmerService'));
            yield 10 => ($container->privates['twig.template_cache_warmer'] ?? $container->load('getTwig_TemplateCacheWarmerService'));
            yield 11 => ($container->privates['exercise_html_purifier.cache_warmer.serializer'] ?? $container->load('getExerciseHtmlPurifier_CacheWarmer_SerializerService'));
        }, 12), false, ($container->targetDir.''.'/App_KernelProdContainerDeprecations.log'));
    }
}
