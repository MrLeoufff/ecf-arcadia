<?php

namespace ContainerFQiKvhx;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMailer_TransportFactory_MailjetService extends App_KernelProdContainer
{
    /*
     * Gets the private 'mailer.transport_factory.mailjet' shared service.
     *
     * @return \Symfony\Component\Mailer\Bridge\Mailjet\Transport\MailjetTransportFactory
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container));

        if (isset($container->privates['mailer.transport_factory.mailjet'])) {
            return $container->privates['mailer.transport_factory.mailjet'];
        }

        return $container->privates['mailer.transport_factory.mailjet'] = new \Symfony\Component\Mailer\Bridge\Mailjet\Transport\MailjetTransportFactory($a, ($container->privates['http_client.uri_template'] ?? $container->load('getHttpClient_UriTemplateService')), ($container->privates['monolog.logger.mailer'] ?? $container->load('getMonolog_Logger_MailerService')));
    }
}
